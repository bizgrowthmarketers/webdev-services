{"version":3,"file":"static/js/933.6c1ea841.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/RegisterPage/RegisterPage.styled.js","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainLoader = styled.div`\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  border-radius: 0 px;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(192, 192, 192);\n  @media screen and (min-width: 767px) {\n    border-radius: 5px;\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { ThemeContext } from 'components/Context/Context';\nimport React, { useContext } from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrapper, MainLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  const { isNightMode } = useContext(ThemeContext);\n\n  // Define colors based on night mode\n  const colors = isNightMode\n    ? ['#D6001C', '#FC842D', '#FF5722', '#FF9800', '#FFC107']\n    : ['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87'];\n\n  return (\n    <MainLoader>\n      <LoaderWrapper>\n        <ColorRing\n          visible={true}\n          height=\"120\"\n          width=\"120\"\n          ariaLabel=\"color-ring-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"color-ring-wrapper\"\n          colors={colors}\n        />\n      </LoaderWrapper>\n    </MainLoader>\n  );\n};\n","import styled from 'styled-components';\n// import { Field } from 'formik';\n\n// export const FormLabel = styled.label`\n//   :last-child {\n//     padding-bottom: 0px;\n//   }\n\n//   display: block;\n//   font-family: ${p => p.theme.fonts.body};\n//   height: 36px;\n//   padding-bottom: 40px;\n//   font-style: normal;\n//   font-size: ${p => p.theme.fontSizes[0]};\n//   line-height: 17px;\n//   letter-spacing: 0.04em;\n//   color: ${p => p.theme.colors.gray};\n// `;\n\n// export const RegisterButton = styled.button`\n//   cursor: pointer;\n//   margin-top: 20px;\n//   width: 182px;\n//   height: 44px;\n\n//   color: #ffffff;\n//   background-color: #fc842d;\n//   border-radius: 30px;\n//   box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n//   border: none;\n//   font-family: ${p => p.theme.fonts.body};\n//   font-size: ${p => p.theme.fontSizes[0]};\n//   line-height: 17px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   text-align: center;\n//   letter-spacing: 0.04em;\n// `;\n\n// export const LoginButton = styled.button`\n//   cursor: pointer;\n//   margin-top: 20px;\n//   width: 182px;\n//   height: 44px;\n\n//   color: #fc842d;\n//   background-color: #ffffff;\n//   border-radius: 30px;\n//   border: 2px solid #fc842d;\n//   font-family: ${p => p.theme.fonts.body};\n//   font-size: ${p => p.theme.fontSizes[0]};\n//   line-height: 17px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   text-align: center;\n//   letter-spacing: 0.04em;\n// `;\n\n// export const FormInput = styled(Field)`\n//   display: block;\n//   height: 20px;\n//   width: 280px;\n//   padding: 0px;\n//   border-bottom: ${p => p.theme.borders.normal};\n//   border-top: ${p => p.theme.borders.none};\n//   border-right: ${p => p.theme.borders.none};\n//   border-left: ${p => p.theme.borders.none};\n//   outline: none;\n//   :focus {\n//     border-color: ${p => p.theme.colors.orange};\n//   }\n// `;\n\n// // export const RegisterForm = styled(Form)`\n// //   margin-bottom: 60px;\n// // `;\n\n// // export const Wrapper = styled.div`\n// //   padding-top: 40px;\n// //   width: 285px;\n// //   margin-left: auto;\n// //   margin-right: auto;\n// // `;\n\n// export const RegisterHeader = styled.h2`\n//   font-family: ${p => p.theme.fonts.body};\n//   margin-bottom: 60px;\n//   font-size: ${p => p.theme.fontSizes[0]};\n//   line-height: 17px;\n//   text-align: center;\n//   letter-spacing: 0.04em;\n//   color: ${p => p.theme.colors.orange};\n// `;\n\n// !==============================================================================\n\n// import styled from 'styled-components';\nimport leaves from '../../images/hero/desktop/leaves.png';\nimport banana from '../../images/hero/desktop/banana.png';\nimport Strawberry from '../../images/hero/desktop/Strawberry.png';\nimport Vector from '../../images/hero/desktop/Vector.png';\nimport leavesRetina from '../../images/hero/desktop/leaves@2x.png';\nimport bananaRetina from '../../images/hero/desktop/banana@2x.png';\nimport StrawberryRetina from '../../images/hero/desktop/Strawberry@2x.png';\nimport VectorRetina from '../../images/hero/desktop/Vector@2x.png';\n\nimport bananaTablet from '../../images/hero/tablet/banana.png';\nimport bananaTabletRetina from '../../images/hero/tablet/banana@2x.png';\nimport StrawberryTablet from '../../images/hero/tablet/Strawberry.png';\nimport StrawberryTabletRetina from '../../images/hero/tablet/Strawberry@2x.png';\nimport leavesTablet from '../../images/login/leaves.png';\nimport leavesTabletRetina from '../../images/login/leaves@2x.png';\nimport VectorTablet from '../../images/hero/tablet/Vector.png';\nimport VectorTabletRetina from '../../images/hero/tablet/Vector@2x.png';\n\nexport const Wrapper = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 100px;\n  @media (min-width: 426px) and (max-width: 1023px) {\n    padding: 160px 32px 419px;\n  }\n  @media (min-width: 1024px) {\n    margin: 0 auto;\n    width: 1280px;\n    padding: 306px 16px 179px;\n  }\n`;\nexport const ButtonWrapper = styled.div`\n  margin-top: 60px;\n  display: grid;\n  gap: 32px;\n  justify-content: center;\n  @media (min-width: 426px) {\n    display: flex;\n    gap: 32px;\n    justify-content: flex-start;\n  }\n`;\nexport const H2 = styled.h2`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes[0]};\n  line-height: ${p => p.theme.lineHeights[0]};\n\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.colors.orange};\n  margin-bottom: 60px;\n  margin-top: 40px;\n  text-align: center;\n  @media (min-width: 426px) {\n    text-align: left;\n  }\n`;\n\nexport const WrapperWithFruits = styled.div`\n  @media (min-width: 426px) and (max-width: 1023px) {\n    background-image: url(${StrawberryTablet}), url(${leavesTablet}),\n      url(${bananaTablet}), url(${VectorTablet});\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: bottom 200px right -80px, top -97px left 0px,\n      bottom 0px right 0px, bottom 0px right 0px;\n    background-size: 391px 384px, 740px 842px, auto, auto;\n\n    @media (min-resolution: 2dppx) {\n      background-image: url(${leavesTabletRetina}),\n        url(${StrawberryTabletRetina}), url(${bananaTabletRetina}),\n        url(${VectorTabletRetina});\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n      background-position: bottom 97px left 0px, bottom 279px right -60px,\n        bottom 0px right 0px, bottom 0px right 0px;\n      background-size: 531px 553px, 291px 284px, 491px 431px, 494px 563px;\n    }\n  }\n  @media (min-width: 1024px) {\n    background-image: url(${leaves}), url(${Strawberry}), url(${banana}),\n      url(${Vector});\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: top 0px right 195px, top 506px right 30px,\n      top 0px right 0px, bottom 0px right 0px;\n    background-size: auto, auto, auto, 602px 816px;\n    @media (min-resolution: 2dppx) {\n      background-image: url(${leavesRetina}), url(${StrawberryRetina}),\n        url(${bananaRetina}), url(${VectorRetina});\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n      background-position: top 0px right 195px, top 526px right 50px,\n        top 0px right 0px, bottom 0px right 0px;\n      background-size: 746px 846px, 286px 279px, 498px 450px, 602px 816px;\n    }\n  }\n`;\n\nexport const ButtonGoogle = styled.a`\n  text-decoration: none;\n  font-family: ${p => p.theme.fonts.body};\n  line-height: ${p => p.theme.lineHeights.body};\n  font-size: ${p => p.theme.fontSizes[0]};\n\n  border-radius: 30px;\n  border: ${p => p.theme.borders.btn};\n  color: ${p => p.theme.colors.orange};\n  width: 182px;\n  height: 44px;\n  transition: background 250ms cubic-bezier(0.42, 0, 1, 1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.hover};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\nimport * as yup from 'yup';\nimport { Error, Input, List } from 'components/Form/Form.styled';\nimport { Button } from 'components/Button/Button';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useLogInUserMutation, useRegisterUserMutation } from 'redux/auth';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials, setUser } from 'redux/authSlice';\nimport {\n  ButtonWrapper,\n  H2,\n  Wrapper,\n  // ButtonGoogle,\n} from '../components/RegisterPage/RegisterPage.styled';\nimport { WrapperWithFruits } from 'components/RegisterPage/RegisterPage.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { ThemeContext } from 'components/Context/Context';\nimport { routes } from 'components/Routes/routes';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(4, 'Name must be more than or equal to 4 letters')\n    .max(50, 'Name must be less than or equal to 50 letters')\n    .required('Name is required field'),\n  password: yup\n    .string()\n    .min(6, 'Password must be more than or equal to 6 letters')\n    .max(16, 'Password must be less than or equal to 16 letters')\n    .required('Password is required field'),\n  email: yup\n    .string()\n    .email('Invalid email')\n    .typeError('Email must be an email')\n    .required('Email is required field'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterPage = () => {\n  const { isNightMode } = useContext(ThemeContext);\n  const location = useLocation();\n  const userDataForRegister = location.state?.userDataForRegister;\n  localStorage.setItem('params', JSON.stringify(userDataForRegister));\n\n  const navigate = useNavigate();\n  const [registerUser, { status }] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n  const [loginUser] = useLogInUserMutation();\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    console.log('Submitting form...');\n    const userDataForRegisterAll = { ...values, ...userDataForRegister };\n    try {\n      const user = await registerUser(userDataForRegisterAll).unwrap();\n      console.log('User registered:', user);\n      const loginValues = { ...values };\n      delete loginValues.name;\n      const userLogin = await loginUser(loginValues).unwrap();\n      console.log('User logged in:', userLogin);\n      dispatch(setCredentials(user));\n      dispatch(setUser(userLogin));\n      console.log('Navigating to diary...');\n      navigate(routes.diary);\n      resetForm();\n    } catch (error) {\n      console.error('Error during registration or login:', error);\n    }\n  };\n  const handleClick = () => {\n    navigate(routes.login);\n  };\n  const handleShowPassword = () => {\n    setIsShowPassword(!isShowPassword);\n  };\n\n  return (\n    <WrapperWithFruits>\n      {isNightMode}\n      {status === 'pending' && <Loader />}\n      <Wrapper>\n        <H2>Register</H2>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <Form>\n            <List style={{ display: 'grid', gridTemplateColumns: 'revert' }}>\n              <li>\n                <label>\n                  <Input type=\"name\" name=\"name\" placeholder=\"Name *\" />\n                  <ErrorMessage name=\"name\" component={Error} />\n                </label>\n              </li>\n\n              <li>\n                <label>\n                  <Input type=\"email\" name=\"email\" placeholder=\"Email *\" />\n                  <ErrorMessage name=\"email\" component={Error} />\n                </label>\n              </li>\n\n              <li>\n                <label style={{ position: 'relative' }}>\n                  <Input\n                    type={isShowPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\"Password *\"\n                    maxLength=\"16\"\n                  />\n                  {isShowPassword ? (\n                    <AiFillEyeInvisible\n                      onClick={handleShowPassword}\n                      style={{\n                        position: 'absolute',\n                        top: '0px',\n                        left: '250px',\n                        color: '#FC842D',\n                      }}\n                    />\n                  ) : (\n                    <AiFillEye\n                      onClick={handleShowPassword}\n                      style={{\n                        position: 'absolute',\n                        top: '0px',\n                        left: '250px',\n                        color: '#FC842D',\n                      }}\n                    />\n                  )}\n                  <ErrorMessage name=\"password\" component={Error} />\n                </label>\n              </li>\n            </List>\n            <ButtonWrapper>\n              <Button type=\"submit\" full={true} style={{ width: '200px' }}>\n                Register\n              </Button>\n              <div onClick={handleClick}>\n                <Button type=\"button\" full={false}>\n                  Log In\n                </Button>\n              </div>\n              {/* <ButtonGoogle href=\"https://slimmom-oz0k.onrender.com/api/auth/google-signup\">\n                Register Google\n              </ButtonGoogle> */}\n            </ButtonWrapper>\n          </Form>\n        </Formik>\n      </Wrapper>\n    </WrapperWithFruits>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["MainLoader","styled","div","_templateObject","_taggedTemplateLiteral","LoaderWrapper","_templateObject2","Loader","isNightMode","useContext","ThemeContext","colors","_jsx","children","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Wrapper","ButtonWrapper","H2","h2","_templateObject3","p","theme","fonts","body","fontSizes","lineHeights","orange","WrapperWithFruits","_templateObject4","StrawberryTablet","leavesTablet","bananaTablet","VectorTablet","leavesTabletRetina","StrawberryTabletRetina","bananaTabletRetina","VectorTabletRetina","leaves","Strawberry","banana","Vector","leavesRetina","StrawberryRetina","bananaRetina","VectorRetina","a","_templateObject5","borders","btn","hover","white","schema","yup","shape","name","min","max","required","password","email","typeError","initialValues","RegisterPage","_location$state","userDataForRegister","useLocation","state","localStorage","setItem","JSON","stringify","navigate","useNavigate","registerUser","status","useRegisterUserMutation","dispatch","useDispatch","loginUser","useLogInUserMutation","isShowPassword","setIsShowPassword","useState","handleShowPassword","_jsxs","Formik","onSubmit","async","values","_ref","resetForm","console","log","userDataForRegisterAll","user","unwrap","loginValues","userLogin","setCredentials","setUser","routes","diary","error","validationSchema","Form","List","style","display","gridTemplateColumns","Input","type","placeholder","ErrorMessage","component","Error","position","maxLength","AiFillEyeInvisible","onClick","top","left","color","AiFillEye","Button","full","handleClick","login"],"sourceRoot":""}